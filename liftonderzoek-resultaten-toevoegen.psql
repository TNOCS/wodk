-- Type 0 = EGW; Type 1 = MGW
-- Lift 0 = nee, 1 = ja, 2 = aanname geen lift, -1 = in onderzoek
-- Plint 0 = nee, 1 = ja, -1 = in onderzoek

-- Reset alle sterren, iconen, types, liften, plinten en voeg onderzoeksresultaat toe. Alleen voor panden die op 'in onderzoek' staan
UPDATE bagactueel.pand
SET lift_oz = oz.lift, plint_oz = oz.plint,
ster_onb = NULL,
ster_in_ond = NULL,
ster_0 = NULL,
ster_1 = NULL,
ster_2 = NULL,
ster_3 = NULL,
ster_4 = NULL,
ster_5 = NULL,
icon = NULL,
lift = NULL,
plint = NULL,
pandtype = NULL
FROM bagactueel.liftonderzoek oz
WHERE
identificatie = oz.pandid AND oz.lift IS NOT NULL;

-- 11a
UPDATE bagactueel.pand
SET ster_3 = woningen_in_pand, lift = 1, plint = plint_oz, pandtype = 1, icon = 3
WHERE
woningen_in_pand > 8 AND lift_oz = 1
AND (bouwjaar >= 1930 AND bouwjaar < 2020);

-- 11b1
UPDATE bagactueel.pand
SET ster_0 = woningen_in_pand, lift = 0, plint = 1, pandtype = 1, icon = 0
WHERE
woningen_in_pand > 8 AND lift_oz = 0 AND plint_oz = 1
AND (bouwjaar >= 1930 AND bouwjaar < 2020);

-- 11b2
UPDATE bagactueel.pand
SET ster_3 = floor(woningen_in_pand / 3), ster_0 = (woningen_in_pand - (floor(woningen_in_pand / 3)), lift = 0, plint = 0, icon = 19, pandtype = 1
WHERE
woningen_in_pand > 8 AND lift_oz = 0 AND plint_oz = 0
AND (bouwjaar >= 1930 AND bouwjaar < 2020);

-- 11c1
UPDATE bagactueel.pand
SET ster_0 = woningen_in_pand, lift = -1, plint = -1, icon = 0, pandtype = 1
WHERE
woningen_in_pand > 8 AND lift_oz = -1 AND (plint_oz = -1 OR plint_oz = 1)
AND (bouwjaar >= 1930 AND bouwjaar < 2020);

-- 11c2
UPDATE bagactueel.pand
SET ster_3 = floor(woningen_in_pand / 3), ster_0 = (woningen_in_pand - (floor(woningen_in_pand / 3)), lift = -1, plint = 0, icon = 19, pandtype = 1
WHERE
woningen_in_pand > 8 AND lift_oz = -1 AND plint_oz = 0
AND (bouwjaar >= 1930 AND bouwjaar < 2020);

 -- Clean db
 VACUUM ANALYZE bagactueel.pand;
 
 -- Reset alle buurten
UPDATE bagactueel.buurt_2014
SET ster_onb = NULL,
ster_in_ond = NULL,
ster_0 = NULL,
ster_1 = NULL,
ster_2 = NULL,
ster_3 = NULL,
ster_4 = NULL,
ster_5 = NULL,
ster_totaal = NULL;

UPDATE bagactueel.buurt_2014
SET ster_0 = sq.ster_0, ster_1 = sq.ster_1, ster_2 = sq.ster_2, ster_3 = sq.ster_3, ster_4 = sq.ster_4, ster_5 = sq.ster_5, ster_onb = sq.ster_onb, ster_in_ond = sq.ster_in_ond
	FROM (
		SELECT SUM(panden.ster_0) as ster_0, SUM(panden.ster_1) as ster_1, SUM(panden.ster_2) as ster_2, SUM(panden.ster_3) as ster_3, SUM(panden.ster_4) as ster_4, SUM(panden.ster_5) as ster_5, SUM(panden.ster_onb) as ster_onb, SUM(panden.ster_in_ond) as ster_in_ond, panden.gid as bu_gid
		FROM (
			SELECT pand.identificatie, MAX(pand.ster_0) as ster_0, MAX(pand.ster_1) as ster_1, MAX(pand.ster_2) as ster_2, MAX(pand.ster_3) as ster_3, MAX(pand.ster_4) as ster_4, MAX(pand.ster_5) as ster_5, MAX(pand.ster_onb) as ster_onb, MAX(pand.ster_in_ond) as ster_in_ond, b2.gid
			FROM bagactueel.pand, bagactueel.buurt_2014 b2
			WHERE ST_Intersects(pand.geovlak, b2.geom)
			GROUP BY b2.gid, pand.identificatie
		) AS panden
		GROUP BY bu_gid
	) AS sq
WHERE buurt_2014.gid = sq.bu_gid;

UPDATE bagactueel.buurt_2014
SET ster_totaal = COALESCE(ster_0, 0) + COALESCE(ster_1, 0) +COALESCE(ster_2, 0) + COALESCE(ster_3, 0) + COALESCE(ster_4, 0) + COALESCE(ster_5, 0) + COALESCE(ster_onb, 0) + COALESCE(ster_in_ond, 0);

-- Clean db
VACUUM ANALYZE bagactueel.buurt_2014;

-- Aggregeer buurten op gemeentenivo
UPDATE bagactueel.gemeente
SET ster_0 = sq.ster_0, ster_1 = sq.ster_1, ster_2 = sq.ster_2, ster_3 = sq.ster_3, ster_4 = sq.ster_4, ster_5 = sq.ster_5, 
ster_onb = sq.ster_onb, ster_in_ond = sq.ster_in_ond, ster_totaal = sq.ster_totaal, a_koopwon = (sq.a_koopwon),
a_huurwon = (sq.a_huurwon), a_huko_onb = (sq.a_huko_onb),
a_1gezw = (sq.a_1gezw), a_mgezw = (sq.a_mgezw), aant_inw = (sq.aant_inw)
FROM 
	( 
	SELECT SUM(buurten.ster_0) as ster_0, SUM(buurten.ster_1) as ster_1, SUM(buurten.ster_2) as ster_2, SUM(buurten.ster_3) as ster_3,
	 SUM(buurten.ster_4) as ster_4, SUM(buurten.ster_5) as ster_5, SUM(buurten.ster_onb) as ster_onb, SUM(buurten.ster_in_ond) as ster_in_ond, SUM(buurten.ster_totaal) as ster_totaal,
	 SUM(buurten.a_huurwon) as a_huurwon, SUM(buurten.a_huko_onb) as a_huko_onb, SUM(buurten.a_koopwon) as a_koopwon,
	 SUM(buurten.a_1gezw) as a_1gezw, SUM(buurten.a_mgezw) as a_mgezw, SUM(buurten.aant_inw) as aant_inw, buurten.gid as gm_gid
	 FROM (
		SELECT bu.ster_0, bu.ster_1, bu.ster_2, bu.ster_3, bu.ster_4, bu.ster_5, 
		bu.ster_onb, bu.ster_in_ond, bu.ster_totaal, bu.aant_inw, (bu.p_koopwon * bu.ster_totaal / 100) as a_koopwon,
		(bu.p_huurwon * bu.ster_totaal / 100) as a_huurwon, (bu.p_huko_onb * bu.ster_totaal / 100) as a_huko_onb,
		(bu.p_1gezw * bu.ster_totaal / 100) as a_1gezw, (bu.p_mgezw * bu.ster_totaal / 100) as a_mgezw, gemeente.gid
		FROM bagactueel.buurt_2014 bu, bagactueel.gemeente
		WHERE ST_Contains(gemeente.geovlak, ST_Centroid(bu.geom))
		) AS buurten
		GROUP BY gm_gid
	 ) AS sq
 WHERE sq.gm_gid = gemeente.gid;
 
-- Aggregeer gemeente op provincienivo
UPDATE bagactueel.provincie
SET ster_0 = sq.ster_0, ster_1 = sq.ster_1, ster_2 = sq.ster_2, ster_3 = sq.ster_3, ster_4 = sq.ster_4, ster_5 = sq.ster_5, 
ster_onb = sq.ster_onb, ster_in_ond = sq.ster_in_ond, ster_totaal = sq.ster_totaal, a_koopwon = (sq.a_koopwon),
a_huurwon = (sq.a_huurwon), a_huko_onb = (sq.a_huko_onb),
a_1gezw = (sq.a_1gezw), a_mgezw = (sq.a_mgezw), aant_inw = (sq.aant_inw)
FROM 
	( 
	SELECT SUM(buurten.ster_0) as ster_0, SUM(buurten.ster_1) as ster_1, SUM(buurten.ster_2) as ster_2, SUM(buurten.ster_3) as ster_3,
	 SUM(buurten.ster_4) as ster_4, SUM(buurten.ster_5) as ster_5, SUM(buurten.ster_onb) as ster_onb, SUM(buurten.ster_in_ond) as ster_in_ond, SUM(buurten.ster_totaal) as ster_totaal,
	 SUM(buurten.a_huurwon) as a_huurwon, SUM(buurten.a_huko_onb) as a_huko_onb, SUM(buurten.a_koopwon) as a_koopwon,
	 SUM(buurten.a_1gezw) as a_1gezw, SUM(buurten.a_mgezw) as a_mgezw, SUM(buurten.aant_inw) as aant_inw, buurten.gid as gm_gid
	 FROM (
		SELECT bu.ster_0, bu.ster_1, bu.ster_2, bu.ster_3, bu.ster_4, bu.ster_5, 
		bu.ster_onb, bu.ster_in_ond, bu.ster_totaal, bu.aant_inw, (bu.p_koopwon * bu.ster_totaal / 100) as a_koopwon,
		(bu.p_huurwon * bu.ster_totaal / 100) as a_huurwon, (bu.p_huko_onb * bu.ster_totaal / 100) as a_huko_onb,
		(bu.p_1gezw * bu.ster_totaal / 100) as a_1gezw, (bu.p_mgezw * bu.ster_totaal / 100) as a_mgezw, provincie.gid
		FROM bagactueel.buurt_2014 bu, bagactueel.provincie
		WHERE ST_Contains(provincie.geovlak, ST_Centroid(bu.geom))
		) AS buurten
		GROUP BY gm_gid
	 ) AS sq
 WHERE sq.gm_gid = provincie.gid;
 
 -- Clean db
 VACUUM ANALYZE bagactueel.gemeente;
 VACUUM ANALYZE bagactueel.provincie;
